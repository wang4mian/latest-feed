---
import type { Article } from '@/types'

export interface Props {
  article: Article
}

const { article } = Astro.props

const getStatusColor = (status: string) => {
  switch (status) {
    case 'new': return 'bg-blue-100 text-blue-800'
    case 'processing': return 'bg-yellow-100 text-yellow-800'
    case 'processed': return 'bg-green-100 text-green-800'
    case 'adopted': return 'bg-purple-100 text-purple-800'
    case 'ignored': return 'bg-gray-100 text-gray-800'
    case 'compiled': return 'bg-indigo-100 text-indigo-800'
    default: return 'bg-gray-100 text-gray-800'
  }
}

const formatDate = (dateString: string) => {
  return new Date(dateString).toLocaleDateString('zh-CN', {
    month: 'short',
    day: 'numeric',
    hour: '2-digit',
    minute: '2-digit'
  })
}
---

<div class="bg-white rounded-lg shadow-md p-6 hover:shadow-lg transition-shadow">
  <div class="flex items-start justify-between mb-3">
    <h3 class="font-semibold text-lg text-gray-900 leading-tight">
      {article.raw_content?.headline || '无标题'}
    </h3>
    <span class={`px-2 py-1 text-xs rounded-full ${getStatusColor(article.status)}`}>
      {article.status}
    </span>
  </div>
  
  <p class="text-gray-600 text-sm mb-4 line-clamp-3">
    {article.ai_translation ? article.ai_translation.substring(0, 120) + '...' : '暂无翻译'}
  </p>
  
  <div class="flex items-center justify-between mb-4">
    <div class="flex items-center space-x-2">
      <span class="px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full">
        评分: {article.value_score || 0}/10
      </span>
      {article.target_audience && article.target_audience.length > 0 && (
        <span class="px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full">
          {article.target_audience[0]}
        </span>
      )}
    </div>
    <span class="text-xs text-gray-500">
      {formatDate(article.created_at)}
    </span>
  </div>
  
  <div class="flex space-x-2">
    {article.status === 'processed' && (
      <>
        <button 
          onclick={`adoptArticle('${article.id}')`}
          class="flex-1 px-3 py-2 bg-green-500 text-white text-sm rounded hover:bg-green-600 transition-colors"
        >
          采用
        </button>
        <button 
          onclick={`ignoreArticle('${article.id}')`}
          class="flex-1 px-3 py-2 bg-red-500 text-white text-sm rounded hover:bg-red-600 transition-colors"
        >
          忽略
        </button>
      </>
    )}
    {article.status === 'adopted' && (
      <a 
        href={`/workbench?article=${article.id}`}
        class="flex-1 text-center px-3 py-2 bg-blue-500 text-white text-sm rounded hover:bg-blue-600 transition-colors"
      >
        编辑
      </a>
    )}
  </div>
</div>