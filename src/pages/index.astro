---
import Layout from '@/layouts/Layout.astro'
import ArticleCard from '@/components/ArticleCard.astro'
import { supabase } from '@/lib/supabase'

// 获取文章数据
const { data: articles, error } = await supabase
  .from('articles')
  .select('*')
  .eq('status', 'processed')
  .order('value_score', { ascending: false })
  .limit(20)

if (error) {
  console.error('获取文章失败:', error)
}

// 获取RSS分类
const { data: categories } = await supabase
  .from('rss_sources')
  .select('category')
  .eq('is_active', true)

const uniqueCategories = [...new Set(categories?.map(c => c.category) || [])]
---

<Layout title="制造业情报系统 - 主页">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    
    <!-- 主题选择标签 -->
    <div class="bg-white shadow rounded-lg mb-6">
      <div class="border-b border-gray-200">
        <nav class="-mb-px flex space-x-8 px-6" aria-label="主题">
          <button onclick="selectCategory('all')" class="category-tab active py-4 px-1 border-b-2 font-medium text-sm">
            🌐 全部主题
          </button>
          {uniqueCategories.map(category => (
            <button onclick={`selectCategory('${category}')`} class="category-tab py-4 px-1 border-b-2 font-medium text-sm border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300">
              {category === '3D打印' ? '🖨️' : '📈'} {category}
            </button>
          ))}
        </nav>
      </div>
    </div>

    <!-- 文章列表 -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6" id="articles-container">
      {articles?.map(article => (
        <ArticleCard article={article} />
      ))}
    </div>
    
    {(!articles || articles.length === 0) && (
      <div class="text-center py-12">
        <p class="text-gray-500">暂无文章数据</p>
      </div>
    )}
  </div>

  <script>
    let currentCategory = 'all'
    
    async function selectCategory(category) {
      currentCategory = category
      
      // 更新标签样式
      document.querySelectorAll('.category-tab').forEach(tab => {
        tab.classList.remove('active', 'border-primary', 'text-primary')
        tab.classList.add('border-transparent', 'text-gray-500')
      })
      event.target.classList.add('active', 'border-primary', 'text-primary')
      event.target.classList.remove('border-transparent', 'text-gray-500')
      
      // 加载对应分类的文章
      await loadArticlesByCategory(category)
    }
    
    async function loadArticlesByCategory(category) {
      try {
        const url = category === 'all' 
          ? '/api/articles' 
          : `/api/articles?category=${encodeURIComponent(category)}`
          
        const response = await fetch(url)
        const data = await response.json()
        
        if (data.success) {
          renderArticles(data.data)
        }
      } catch (error) {
        console.error('加载文章失败:', error)
      }
    }
    
    function renderArticles(articles) {
      const container = document.getElementById('articles-container')
      if (!container) return
      
      if (articles.length === 0) {
        container.innerHTML = '<div class="col-span-full text-center py-12"><p class="text-gray-500">暂无此分类文章</p></div>'
        return
      }
      
      container.innerHTML = articles.map(article => `
        <div class="bg-white rounded-lg shadow-md p-6 hover:shadow-lg transition-shadow">
          <h3 class="font-semibold text-lg mb-2">${article.raw_content?.headline || '无标题'}</h3>
          <p class="text-gray-600 text-sm mb-4">${(article.ai_translation || '').substring(0, 100)}...</p>
          <div class="flex items-center justify-between">
            <span class="px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full">
              评分: ${article.value_score || 0}/10
            </span>
            <div class="flex space-x-2">
              <button onclick="adoptArticle('${article.id}')" class="px-3 py-1 bg-green-500 text-white text-xs rounded hover:bg-green-600">
                采用
              </button>
              <button onclick="ignoreArticle('${article.id}')" class="px-3 py-1 bg-red-500 text-white text-xs rounded hover:bg-red-600">
                忽略
              </button>
            </div>
          </div>
        </div>
      `).join('')
    }
    
    async function adoptArticle(id) {
      try {
        const response = await fetch('/api/articles/update', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ id, status: 'adopted', editor_action: 'adopted' })
        })
        
        if (response.ok) {
          location.reload()
        }
      } catch (error) {
        console.error('采用文章失败:', error)
      }
    }
    
    async function ignoreArticle(id) {
      try {
        const response = await fetch('/api/articles/update', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ id, status: 'ignored', editor_action: 'ignored' })
        })
        
        if (response.ok) {
          location.reload()
        }
      } catch (error) {
        console.error('忽略文章失败:', error)
      }
    }
  </script>

  <style>
    .category-tab.active {
      @apply border-primary text-primary;
    }
  </style>
</Layout>