---
import Layout from '@/layouts/Layout.astro'
import { supabase } from '@/lib/supabase'

// 获取文章数据
const { data: articles, error } = await supabase
  .from('articles')
  .select('*')
  .order('created_at', { ascending: false })

if (error) {
  console.error('获取文章数据失败:', error)
}
---

<Layout title="文章池 - Articles">
  <div class="max-w-7xl mx-auto px-4 py-8">
    
    <div class="mb-8">
      <h1 class="text-3xl font-bold text-gray-900">📰 文章池</h1>
      <p class="mt-2 text-gray-600">筛选和管理 RSS 抓取的文章，点击"采用"或"忽略"进行处理</p>
    </div>
    
    <!-- 统计卡片 -->
    <div class="grid grid-cols-1 md:grid-cols-5 gap-4 mb-6">
      <div class="bg-white rounded-lg shadow p-4 text-center">
        <div class="text-2xl font-bold text-blue-600">{articles?.length || 0}</div>
        <div class="text-sm text-gray-600">总文章</div>
      </div>
      <div class="bg-white rounded-lg shadow p-4 text-center">
        <div class="text-2xl font-bold text-green-600">{articles?.filter(a => a.status === 'processed').length || 0}</div>
        <div class="text-sm text-gray-600">已处理</div>
      </div>
      <div class="bg-white rounded-lg shadow p-4 text-center">
        <div class="text-2xl font-bold text-yellow-600">{articles?.filter(a => a.editor_action === 'adopted').length || 0}</div>
        <div class="text-sm text-gray-600">已采用</div>
      </div>
      <div class="bg-white rounded-lg shadow p-4 text-center">
        <div class="text-2xl font-bold text-purple-600">{articles?.filter(a => a.editor_action === 'compiled').length || 0}</div>
        <div class="text-sm text-gray-600">已编译</div>
      </div>
      <div class="bg-white rounded-lg shadow p-4 text-center">
        <div class="text-2xl font-bold text-red-600">{articles?.filter(a => a.editor_action === 'ignored').length || 0}</div>
        <div class="text-sm text-gray-600">已忽略</div>
      </div>
    </div>

    <!-- 状态筛选 -->
    <div class="bg-white shadow rounded-lg mb-6 p-4">
      <div class="flex flex-wrap gap-2">
        <button onclick="filterArticles('all')" class="filter-btn active px-4 py-2 rounded-lg text-sm">全部</button>
        <button onclick="filterArticles('new')" class="filter-btn px-4 py-2 rounded-lg text-sm bg-gray-100">新文章</button>
        <button onclick="filterArticles('processed')" class="filter-btn px-4 py-2 rounded-lg text-sm bg-gray-100">已处理</button>
        <button onclick="filterArticles('adopted')" class="filter-btn px-4 py-2 rounded-lg text-sm bg-gray-100">已采用</button>
        <button onclick="filterArticles('compiled')" class="filter-btn px-4 py-2 rounded-lg text-sm bg-gray-100">已编译</button>
        <button onclick="filterArticles('ignored')" class="filter-btn px-4 py-2 rounded-lg text-sm bg-gray-100">已忽略</button>
      </div>
    </div>
    
    {error && (
      <div class="bg-red-100 text-red-800 p-4 rounded mb-4">
        错误: {error.message}
      </div>
    )}
    
    <!-- 文章列表 -->
    <div class="space-y-4" id="articles-container">
      {articles?.map(article => {
        // 解析ai_analysis JSON字符串
        let aiAnalysis = {}
        try {
          aiAnalysis = typeof article.ai_analysis === 'string' ? 
            JSON.parse(article.ai_analysis) : 
            article.ai_analysis || {}
        } catch (e) {
          aiAnalysis = article.ai_analysis || {}
        }
        
        const valueScore = aiAnalysis.value_score || 0
        const title = article.raw_content?.headline || article.raw_content?.title || '无标题'
        const summary = aiAnalysis.initial_translation || aiAnalysis.summary || article.raw_content?.summary || '暂无摘要'
        
        return (
          <div 
            class={`article-item bg-white rounded-lg shadow-md p-6 ${
              article.editor_action === 'adopted' ? 'border-l-4 border-green-500' :
              article.editor_action === 'ignored' ? 'border-l-4 border-red-500' :
              article.status === 'processed' ? 'border-l-4 border-blue-500' :
              'border-l-4 border-gray-300'
            }`}
            data-status={article.status}
            data-editor-action={article.editor_action || ''}
          >
            <div class="flex items-start justify-between">
              <div class="flex-1 min-w-0">
                <!-- 标题和评分 -->
                <div class="flex items-center gap-3 mb-3">
                  <h3 class="font-semibold text-lg text-gray-900 flex-1 line-clamp-2">
                    {title}
                  </h3>
                  {valueScore > 0 && (
                    <span class={`px-3 py-1 rounded-full text-sm font-bold ${
                      valueScore >= 8 ? 'bg-green-100 text-green-800' :
                      valueScore >= 6 ? 'bg-yellow-100 text-yellow-800' :
                      'bg-gray-100 text-gray-700'
                    }`}>
                      {valueScore}/10
                    </span>
                  )}
                </div>
                
                <!-- 摘要 -->
                {summary && (
                  <p class="text-gray-600 text-sm mb-3 line-clamp-3">
                    {summary.substring(0, 200)}...
                  </p>
                )}
                
                <!-- 元信息 -->
                <div class="flex items-center space-x-4 text-xs text-gray-500 mb-4">
                  <span>📅 {new Date(article.created_at).toLocaleDateString('zh-CN')}</span>
                  <span class={`px-2 py-1 rounded ${
                    article.status === 'processed' ? 'bg-green-100 text-green-800' :
                    article.status === 'new' ? 'bg-blue-100 text-blue-800' :
                    'bg-gray-100 text-gray-800'
                  }`}>
                    {article.status}
                  </span>
                  {article.editor_action && (
                    <span class={`px-2 py-1 rounded ${
                      article.editor_action === 'adopted' ? 'bg-green-100 text-green-800' :
                      article.editor_action === 'ignored' ? 'bg-red-100 text-red-800' :
                      article.editor_action === 'compiled' ? 'bg-purple-100 text-purple-800' :
                      'bg-gray-100 text-gray-800'
                    }`}>
                      {article.editor_action}
                    </span>
                  )}
                  <a href={article.source_url} target="_blank" class="text-blue-600 hover:underline">
                    🔗 原文链接
                  </a>
                </div>

                <!-- 操作按钮 -->
                <div class="flex space-x-2">
                  {/* 显示采用/忽略按钮的条件：已处理但还未做编辑决定 */}
                  {article.status === 'processed' && !article.editor_action && (
                    <>
                      <button 
                        onclick={`updateArticleAction('${article.id}', 'adopted')`}
                        class="px-4 py-2 bg-green-500 text-white text-sm rounded hover:bg-green-600 transition-colors"
                      >
                        ✅ 采用
                      </button>
                      <button 
                        onclick={`updateArticleAction('${article.id}', 'ignored')`}
                        class="px-4 py-2 bg-red-500 text-white text-sm rounded hover:bg-red-600 transition-colors"
                      >
                        ❌ 忽略
                      </button>
                    </>
                  )}
                  
                  {/* 重置按钮：允许重新选择 */}
                  {article.editor_action && article.editor_action !== 'compiled' && (
                    <button 
                      onclick={`resetArticleAction('${article.id}')`}
                      class="px-3 py-2 bg-yellow-500 text-white text-sm rounded hover:bg-yellow-600 transition-colors"
                    >
                      🔄 重置
                    </button>
                  )}
                  
                  {/* 编辑按钮：已采用的文章 */}
                  {article.editor_action === 'adopted' && (
                    <a 
                      href={`/workbench?article=${article.id}`}
                      class="px-4 py-2 bg-blue-500 text-white text-sm rounded hover:bg-blue-600 transition-colors"
                    >
                      ✏️ 编辑
                    </a>
                  )}
                  
                  <button 
                    onclick={`showArticleDetails('${article.id}')`}
                    class="px-4 py-2 bg-gray-500 text-white text-sm rounded hover:bg-gray-600 transition-colors"
                  >
                    📄 详情
                  </button>
                </div>
              </div>
            </div>
          </div>
        )
      })}
    </div>
    
    {(!articles || articles.length === 0) && (
      <div class="text-center py-8">
        <p class="text-gray-500">暂无文章数据</p>
      </div>
    )}
    
  </div>

  <script define:vars={{ articles }}>
    // 筛选文章
    function filterArticles(filter) {
      const articles = document.querySelectorAll('.article-item')
      const buttons = document.querySelectorAll('.filter-btn')
      
      // 更新按钮状态
      buttons.forEach(btn => {
        btn.classList.remove('active', 'bg-blue-500', 'text-white')
        btn.classList.add('bg-gray-100')
      })
      event.target.classList.add('active', 'bg-blue-500', 'text-white')
      event.target.classList.remove('bg-gray-100')
      
      // 筛选文章
      articles.forEach(article => {
        const status = article.dataset.status
        const editorAction = article.dataset.editorAction
        
        let show = false
        if (filter === 'all') {
          show = true
        } else if (filter === 'new' && status === 'new') {
          show = true
        } else if (filter === 'processed' && status === 'processed') {
          show = true
        } else if (filter === 'adopted' && editorAction === 'adopted') {
          show = true
        } else if (filter === 'compiled' && editorAction === 'compiled') {
          show = true
        } else if (filter === 'ignored' && editorAction === 'ignored') {
          show = true
        }
        
        article.style.display = show ? 'block' : 'none'
      })
    }

    // 更新文章操作状态
    async function updateArticleAction(articleId, action) {
      try {
        const response = await fetch('/api/articles/update', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            id: articleId,
            editor_action: action,
            status: action === 'adopted' ? 'adopted' : 'processed'
          })
        })
        
        if (response.ok) {
          location.reload()
        } else {
          alert('操作失败')
        }
      } catch (error) {
        console.error('更新失败:', error)
        alert('操作失败')
      }
    }

    // 显示文章详情
    function showArticleDetails(articleId) {
      const article = window.articlesData.find(a => a.id === articleId)
      if (!article) {
        alert('文章未找到')
        return
      }
      
      const modal = document.createElement('div')
      modal.className = 'fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4'
      modal.onclick = (e) => {
        if (e.target === modal) modal.remove()
      }
      
      const content = document.createElement('div')
      content.className = 'bg-white rounded-lg max-w-4xl w-full max-h-5/6 overflow-y-auto'
      
      const title = article.raw_content?.title || '无标题'
      const summary = article.ai_analysis?.summary_zh || '暂无摘要'
      const valueScore = article.ai_analysis?.value_score || 0
      const keyPoints = article.ai_analysis?.key_points || []
      
      content.innerHTML = `
        <div class="p-6">
          <div class="flex items-center justify-between mb-4">
            <h2 class="text-xl font-bold text-gray-900">${title}</h2>
            <button onclick="this.closest('.fixed').remove()" class="text-gray-500 hover:text-gray-700">
              ✕
            </button>
          </div>
          
          <div class="mb-4">
            <div class="flex items-center space-x-4 text-sm text-gray-600 mb-3">
              <span>📅 ${new Date(article.created_at).toLocaleDateString('zh-CN')}</span>
              <span class="px-2 py-1 rounded ${
                valueScore >= 8 ? 'bg-green-100 text-green-800' :
                valueScore >= 6 ? 'bg-yellow-100 text-yellow-800' :
                'bg-gray-100 text-gray-700'
              }">
                ⭐ ${valueScore}/10
              </span>
              <span class="px-2 py-1 rounded ${
                article.editor_action === 'adopted' ? 'bg-green-100 text-green-800' :
                article.editor_action === 'ignored' ? 'bg-red-100 text-red-800' :
                article.editor_action === 'compiled' ? 'bg-purple-100 text-purple-800' :
                'bg-gray-100 text-gray-800'
              }">
                ${article.editor_action || article.status}
              </span>
            </div>
            <a href="${article.source_url}" target="_blank" class="text-blue-600 hover:underline text-sm">
              🔗 ${article.source_url}
            </a>
          </div>
          
          <div class="space-y-4">
            <div>
              <h3 class="font-medium text-gray-900 mb-2">📋 AI摘要</h3>
              <p class="text-gray-700 text-sm leading-relaxed">${summary}</p>
            </div>
            
            ${keyPoints.length > 0 ? `
            <div>
              <h3 class="font-medium text-gray-900 mb-2">🔍 关键要点</h3>
              <ul class="list-disc list-inside space-y-1 text-sm text-gray-700">
                ${keyPoints.map(point => `<li>${point}</li>`).join('')}
              </ul>
            </div>` : ''}
            
            ${article.final_content ? `
            <div>
              <h3 class="font-medium text-gray-900 mb-2">✏️ 编辑内容</h3>
              <div class="prose prose-sm max-w-none bg-gray-50 p-4 rounded">
                ${article.final_content.split('\\n').slice(0, 10).join('<br>')}
                ${article.final_content.split('\\n').length > 10 ? '<br><em>...内容已截断</em>' : ''}
              </div>
            </div>` : ''}
          </div>
          
          <div class="mt-6 flex justify-end space-x-2">
            ${article.editor_action === 'adopted' ? `
              <a href="/workbench?article=${article.id}" 
                 class="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600">
                ✏️ 编辑文章
              </a>
            ` : ''}
            <button onclick="this.closest('.fixed').remove()" 
                    class="px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-600">
              关闭
            </button>
          </div>
        </div>
      `
      
      modal.appendChild(content)
      document.body.appendChild(modal)
    }

    // 重置文章操作状态
    async function resetArticleAction(articleId) {
      try {
        const response = await fetch('/api/articles/update', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            id: articleId,
            editor_action: null,
            status: 'processed'
          })
        })
        
        if (response.ok) {
          location.reload()
        } else {
          alert('重置失败')
        }
      } catch (error) {
        console.error('重置失败:', error)
        alert('重置失败')
      }
    }

    // 存储文章数据到全局变量供详情功能使用
    window.articlesData = articles || []
    
    // 绑定到window
    window.filterArticles = filterArticles
    window.updateArticleAction = updateArticleAction
    window.resetArticleAction = resetArticleAction
    window.showArticleDetails = showArticleDetails
  </script>

  <style>
    .line-clamp-2 {
      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }
    
    .line-clamp-3 {
      display: -webkit-box;
      -webkit-line-clamp: 3;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }
    
    .filter-btn.active {
      background-color: #3b82f6 !important;
      color: white !important;
    }
    
    .transition-colors {
      transition: background-color 0.2s ease-in-out;
    }
  </style>
</Layout>